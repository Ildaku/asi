"""Initial database schema

Revision ID: 9b47a33d2182
Revises: 
Create Date: 2025-06-23 14:12:04.347804

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9b47a33d2182'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('raw_material_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('raw_material_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_raw_material_types_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_raw_material_types_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'MANAGER', 'USER', name='userrole'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_products_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_name'), ['name'], unique=True)

    op.create_table('raw_materials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('quantity_kg', sa.Float(), nullable=True),
    sa.Column('date_received', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['raw_material_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('raw_materials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_raw_materials_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_raw_materials_name'), ['name'], unique=True)

    op.create_table('material_batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('material_id', sa.Integer(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('remaining_quantity', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['raw_materials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('material_batches', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_material_batches_id'), ['id'], unique=False)

    op.create_table('recipe_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('recipe_templates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recipe_templates_id'), ['id'], unique=False)

    op.create_table('production_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['recipe_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('production_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_production_plans_id'), ['id'], unique=False)

    op.create_table('recipe_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('material_type_id', sa.Integer(), nullable=True),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['material_type_id'], ['raw_material_types.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['recipe_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('recipe_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recipe_items_id'), ['id'], unique=False)

    op.create_table('production_batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['production_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('production_batches', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_production_batches_id'), ['id'], unique=False)

    op.create_table('batch_materials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('material_batch_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['production_batches.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['material_batch_id'], ['material_batches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('batch_materials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_batch_materials_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('batch_materials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_batch_materials_id'))

    op.drop_table('batch_materials')
    with op.batch_alter_table('production_batches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_production_batches_id'))

    op.drop_table('production_batches')
    with op.batch_alter_table('recipe_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recipe_items_id'))

    op.drop_table('recipe_items')
    with op.batch_alter_table('production_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_production_plans_id'))

    op.drop_table('production_plans')
    with op.batch_alter_table('recipe_templates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recipe_templates_id'))

    op.drop_table('recipe_templates')
    with op.batch_alter_table('material_batches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_material_batches_id'))

    op.drop_table('material_batches')
    with op.batch_alter_table('raw_materials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_raw_materials_name'))
        batch_op.drop_index(batch_op.f('ix_raw_materials_id'))

    op.drop_table('raw_materials')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_name'))
        batch_op.drop_index(batch_op.f('ix_products_id'))

    op.drop_table('products')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('raw_material_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_raw_material_types_name'))
        batch_op.drop_index(batch_op.f('ix_raw_material_types_id'))

    op.drop_table('raw_material_types')
    # ### end Alembic commands ###
